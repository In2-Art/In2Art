{"version":3,"file":"571.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAC0D;AACJ;AACX,CAAC;AACP;AACa;;AAK3C,IAAMQ,iBAAiB;EAAxB,MAAOA,iBAAiB;IAI5BC,YAAA;MAHQ,KAAAC,YAAY,GAAG,IAAIV,iDAAe,CAAU,KAAK,CAAC;MAClD,KAAAW,QAAQ,GAAG,IAAIV,yCAAO,EAAQ,CAAC,CAAC;MAGtC,IAAI,CAACW,sBAAsB,EAAE;IAC/B;IAEAC,QAAQA,CAAA;MACN,OAAO,IAAI,CAACH,YAAY,CAACI,YAAY,EAAE;IACzC;IAEQF,sBAAsBA,CAAA;MAC5B,MAAMG,GAAG,GAAC,IAAI;MACdb,8CAAQ,CAAC,IAAI,CAAC,CAAC;MAAA,CACZc,IAAI,CACHX,yDAAS,CAACU,GAAG,CAACJ,QAAQ,CAAC,CAAC;OACzB,CACAM,SAAS,CAAC,MAAK;QACdb,qDAAU,CAACc,aAAa,EAAE,CAACD,SAAS,CAAC;UACnCE,IAAI;YAAA,IAAAC,IAAA,GAAAC,sJAAA,CAAE,WAAOC,IAAI,EAAI;cACnB,IAAIC,KAAK;cACT,IAAGD,IAAI,EAAC;gBAEN,IAAG;kBACDC,KAAK,SAAOhB,8DAAgB,EAAE;iBAC/B,OAAK;kBACJgB,KAAK,SAAOjB,6CAAG,CAACkB,aAAa,EAAE;;gBAEjC,IAAGD,KAAK,EAAC;kBACPR,GAAG,CAACU,YAAY,EAAE;kBAClBV,GAAG,CAACL,YAAY,CAACS,IAAI,CAACG,IAAI,CAAC;;;YAMjC,CAAC;YAAA,gBAAAH,KAAAO,EAAA;cAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;YAAA;UAAA;SACF,CAAC;MACJ,CAAC,CAAC;IACN;IACAH,YAAYA,CAAA;MACV,IAAI,CAACd,QAAQ,CAACQ,IAAI,EAAE;MACpB,IAAI,CAACR,QAAQ,CAACkB,QAAQ,EAAE;IAC1B;IAAC,QAAAC,CAAA;uBA5CUtB,iBAAiB;IAAA;IAAA,QAAAuB,EAAA;aAAjBvB,iBAAiB;MAAAwB,OAAA,EAAjBxB,iBAAiB,CAAAyB,IAAA;MAAAC,UAAA,EAFhB;IAAM;;SAEP1B,iBAAiB;AAAA;;;;;;;;;;;;;;;;;;;;;;ACTiB;AAC0C;AAIlD;AACqB;AACX;;;;AAS1C,IAAM8B,cAAc;EAArB,MAAOA,cAAc;IACzB7B,YAAoB8B,eAAkC;MAAlC,KAAAA,eAAe,GAAfA,eAAe;MAEnC;;;;;MAKS,KAAAC,KAAK,GAAW,EAAE;MAClB,KAAAC,MAAM,GAAW,EAAE;MAwDnB,KAAAC,WAAW,GAAY,IAAI;MAE3B,KAAAC,OAAO,GAAY,IAAI;MAChC;;;MAGS,KAAAC,QAAQ,GAAY,IAAI;MAEjC,KAAAC,SAAS,GAAY,KAAK;MAElB,KAAAC,gBAAgB,GAAG,IAAI9C,iDAAe,CAAqB+C,SAAS,CAAC;MACtE,KAAAC,UAAU,GAAmC,IAAI,CAACF,gBAAgB,CAAChC,YAAY,EAAE;MAEhF,KAAAmC,aAAa,GAAY,KAAK;IA7EmB;IAezD;IACA,IACIC,aAAaA,CAACC,KAAgC;MAChD,IAAI,CAACC,cAAc,GAAGD,KAAK;MAC3B,IAAI,CAACE,IAAI,EAAE;IACb;IAEA,IAAIH,aAAaA,CAAA;MACf,OAAO,IAAI,CAACE,cAAc;IAC5B;IAEA;IACA,IACIE,GAAGA,CAACH,KAAgC;MACtC,IAAI,CAACI,IAAI,GAAGJ,KAAK;MACjB,IAAI,CAACE,IAAI,EAAE;IACb;IAEA,IAAIC,GAAGA,CAAA;MACL,OAAO,IAAI,CAACC,IAAI;IAClB;IAEA;IACA,IACIC,SAASA,CAACL,KAAgC;MAC5C,IAAI,CAACM,UAAU,GAAGN,KAAK;MACvB,IAAI,CAACE,IAAI,EAAE;IACb;IAEA,IAAIG,SAASA,CAAA;MACX,OAAO,IAAI,CAACC,UAAU;IACxB;IAEA;IACA,IACIC,MAAMA,CAACP,KAAgC;MACzC,IAAI,CAACQ,OAAO,GAAGR,KAAK;MACpB,IAAI,CAACE,IAAI,EAAE;IACb;IAEA,IAAIK,MAAMA,CAAA;MACR,OAAO,IAAI,CAACC,OAAO;IACrB;IAsBA,IAAWC,MAAMA,CAAA;MACf,OAAO,CAAC,IAAI,CAAChB,QAAQ,GAAGG,SAAS,GAAG,IAAI,CAACG,aAAa,IAAI,IAAI,CAACI,GAAG;IACpE;IAEA,IAAWO,QAAQA,CAAA;MACjB,OAAO,IAAI,CAACX,aAAa,IAAIH,SAAS,IAAI,IAAI,CAACO,GAAG,IAAIP,SAAS;IACjE;IAEMe,QAAQA,CAAA;MAAA,IAAAC,KAAA;MAAA,OAAA1C,sJAAA;QACZ,MAAMN,GAAG,GAAGgD,KAAI;QAChB,IAAI,CAACA,KAAI,CAACb,aAAa,IAAI,CAACa,KAAI,CAACT,GAAG,IAAI,CAACS,KAAI,CAACrB,WAAW,IAAI,CAACqB,KAAI,CAACL,MAAM,IAAI,CAACK,KAAI,CAACC,MAAM,EAAE;UACzF;UACAjD,GAAG,CAACwB,eAAe,CAAC1B,QAAQ,EAAE,CAACI,SAAS,CAAC;YACvCE,IAAI;cAAA,IAAAC,IAAA,GAAAC,sJAAA,CAAE,WAAOC,IAAI,EAAI;gBACnBP,GAAG,CAACkC,aAAa,GAAG3B,IAAI;gBACxB,IAAIP,GAAG,CAAC4B,OAAO,IAAI5B,GAAG,CAACkC,aAAa,EAAE;kBACpC,MAAMlC,GAAG,CAACsC,IAAI,EAAE;;cAEpB,CAAC;cAAA,gBAAAlC,KAAAO,EAAA;gBAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;cAAA;YAAA;WACF,CAAC;SACH,MAAM;UACL,MAAMb,GAAG,CAACsC,IAAI,EAAE;;MACjB;IACH;IAEA;;;IAGOY,KAAKA,CAAA;MACV,IAAI,CAACf,aAAa,GAAGH,SAAS;MAC9B,IAAI,CAACO,GAAG,GAAGP,SAAS;IACtB;IAEMM,IAAIA,CAAA;MAAA,IAAAa,MAAA;MAAA,OAAA7C,sJAAA;QACR,IAAI,CAAC6C,MAAI,CAACL,QAAQ,EAAE;UAClB,IAAI,CAACK,MAAI,CAACV,SAAS,IAAIU,MAAI,CAACV,SAAS,IAAInB,sDAAI,CAAC8B,YAAY,EAAC;YACzDD,MAAI,CAACZ,GAAG,GAACY,MAAI,CAACE,eAAe;WAC9B,MACG;YACF,IAAIF,MAAI,CAACxB,WAAW,IAAI,CAACwB,MAAI,CAACG,UAAU,EAAE;cACxC,IAAIH,MAAI,CAACR,MAAM,IAAIQ,MAAI,CAACF,MAAM,EAAE;gBAC9BE,MAAI,CAACZ,GAAG,GAAGhB,cAAc,CAACgC,eAAe,CAAC;kBAAEd,SAAS,EAAEU,MAAI,CAACV,SAAS;kBAAEE,MAAM,EAAEQ,MAAI,CAACR,MAAM;kBAAEa,IAAI,EAAEL,MAAI,CAACF;gBAAM,CAAE,CAAC;eACjH,MAAM;gBACLE,MAAI,CAAChB,aAAa,SAASZ,cAAc,CAACkC,eAAe,CAACN,MAAI,CAACV,SAAS,CAAC;;aAE5E,MAAM,IAAIU,MAAI,CAACjB,aAAa,EAAE;cAC7BiB,MAAI,CAAChB,aAAa,SAASZ,cAAc,CAACmC,MAAM,CAACP,MAAI,CAACV,SAAS,EAAEU,MAAI,CAACG,UAAU,IAAI,KAAK,CAAC;;;UAG9FH,MAAI,CAACpB,gBAAgB,CAAC3B,IAAI,CAAC+C,MAAI,CAACN,MAAM,IAAIb,SAAS,CAAC;SACrD,MAAM;UACLmB,MAAI,CAACpB,gBAAgB,CAAC3B,IAAI,CAAC+C,MAAI,CAACN,MAAM,IAAIb,SAAS,CAAC;;MACrD;IACH;IAEA,OAAa0B,MAAMA,CAACjB,SAAiB,EAAEa,UAAA,GAA0C,KAAK;MAAA,OAAAhD,sJAAA;QACpF,OAAOe,sFAAQ,CAACsC,UAAU,CAAC;UAAEC,EAAE,EAAEnB,SAAS;UAAEa;QAAU,CAAE,CAAC,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAEC,GAAG,CAAC;MAAC;IACrF;IACA,OAAaP,eAAeA,CAAChB,SAAiB;MAAA,OAAAnC,sJAAA;QAC5C,OAAOe,sFAAQ,CAAC4C,gBAAgB,CAACxB,SAAS,CAAC,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAEC,GAAG,CAAC;MAAC;IACvE;IACA,OAAOT,eAAeA,CAAC;MAAEd,SAAS;MAAEE,MAAM;MAAEa;IAAI,CAAyE;MACvH,OAAOnC,sFAAQ,CAACkC,eAAe,CAACd,SAAS,EAAEE,MAAM,EAAEa,IAAI,CAAC;IAC1D;IAAC,QAAAzC,CAAA;uBA/IUQ,cAAc,EAAA2C,+DAAA,CAAAE,oEAAA;IAAA;IAAA,QAAApD,EAAA;YAAdO,cAAc;MAAA8C,SAAA;MAAAC,MAAA;QAAA7C,KAAA;QAAAC,MAAA;QAAA2B,eAAA;QAAAlB,aAAA;QAAAI,GAAA;QAAAE,SAAA;QAAAE,MAAA;QAAAM,MAAA;QAAAK,UAAA;QAAA3B,WAAA;QAAAC,OAAA;QAAAC,QAAA;MAAA;MAAA0C,UAAA;MAAAC,QAAA,GAAAN,iEAAA;MAAAQ,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCjB3Bb,uDAAA,eAA0F;;;;UAAnFA,wDAAA,QAAAA,yDAAA,OAAAc,GAAA,CAAA/C,UAAA,GAAAiC,2DAAA,CAA0B,UAAAc,GAAA,CAAAvD,KAAA,YAAAuD,GAAA,CAAAtD,MAAA;;;qBDarBN,yDAAY,EAAAiE,sDAAA;MAAAE,MAAA;IAAA;;SAIXhE,cAAc;AAAA;;;;;;;;;;;;;;;;AEjBU;AACsD;AAa3F,iEAAeiE,+DAAS,CAAcjG,6CAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbN;AACC;AACY;AAC6B;AAIkC;AAC5C;AAEG;AAEpC;AACoB;;;;;;;;;;;;ICZnD2E,4DAAA,aAAsE;IAElEA,uDAAA,oBAKa;IACfA,0DAAA,EAAM;IACNA,4DAAA,UAAK;IACgCA,oDAAA,GAAgC;IAAAA,0DAAA,EAAI;IACvEA,4DAAA,QAAG;IAAAA,oDAAA,GAAoD;IAAAA,0DAAA,EAAI;;;;IARzDA,uDAAA,GAAyB;IAAzBA,wDAAA,0BAAyB,cAAAuC,YAAA,CAAAC,SAAA,YAAAD,YAAA,CAAAE,WAAA,CAAAhE,MAAA;IAOQuB,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAuC,YAAA,CAAAE,WAAA,CAAAE,IAAA,CAAgC;IAChE3C,uDAAA,GAAoD;IAApDA,+DAAA,OAAAuC,YAAA,CAAAK,YAAA,CAAAC,iBAAA,CAAoD;;;;;;IAKzD7C,qEAAA,GAA2C;IACzCA,uDAAA,iBAMU;;;IACVA,uDAAA,iBAAuF;;IACzFA,mEAAA,EAAe;;;;IALXA,uDAAA,GAAwC;IAAxCA,wDAAA,UAAAA,yDAAA,2BAAwC,eAAAA,6DAAA,IAAAiD,GAAA,EAAAjD,yDAAA,OAAAkD,MAAA,CAAAC,OAAA,GAAAD,MAAA,CAAAjB,IAAA,CAAAmB,QAAA;IAIlBpD,uDAAA,GAAoC;IAApCA,wDAAA,UAAAA,yDAAA,uBAAoC;;;;;IAE9DA,qEAAA,GAA4C;IAC1CA,uDAAA,iBAA2F;;IAC3FA,uDAAA,iBAAyF;;IAC3FA,mEAAA,EAAe;;;IAFWA,uDAAA,GAAkC;IAAlCA,wDAAA,UAAAA,yDAAA,qBAAkC;IAClCA,uDAAA,GAAqC;IAArCA,wDAAA,UAAAA,yDAAA,wBAAqC;;;;;IAK/DA,4DAAA,iBAA2D;IACzDA,4DAAA,EAAiF;IAAjFA,4DAAA,cAAiF;IAC/EA,uDAAA,eAME;IACJA,0DAAA,EAAM;;;;;IAGVA,4DAAA,cAAuH;IACrHA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,qCACF;;;AD5BG,IAAMuD,gBAAgB;EAAvB,MAAOA,gBAAgB;IAW3B/H,YACUgI,KAA+B,EAC/BC,KAAqB,EACrBC,SAA2B;MAF3B,KAAAF,KAAK,GAALA,KAAK;MACL,KAAAC,KAAK,GAALA,KAAK;MACL,KAAAC,SAAS,GAATA,SAAS;MAZnB,KAAAC,oBAAoB,GAAY,KAAK;MACrC,KAAAR,OAAO,GAAuB,IAAI,CAACO,SAAS,CAACE,YAAY,CAAC7H,IAAI,CAC5D4F,+CAAS,CAAC;QAAEkC,IAAI,EAAE,IAAI,CAACH,SAAS,CAACI;MAAW,CAAE,CAAC,EAC/CtC,mDAAG,CAAEuC,KAAK,IAAKA,KAAK,CAACF,IAAI,CAAC,CAC3B;MACD,KAAAG,UAAU,GAAmC,IAAI,CAACR,KAAK,CAACS,MAAM,CAACnC,6EAAe,CAAC;MAC/E,KAAAoC,UAAU,GAAwB,IAAI,CAACV,KAAK,CAACS,MAAM,CAACrC,oFAAsB,CAAC;MAC3E,KAAAuC,cAAc,GAAkC,IAAI,CAACX,KAAK,CAACS,MAAM,CAACpC,iFAAmB,CAAC;MA0BnE,KAAAI,IAAI,GAAGA,6CAAI;IApB3B;IAEHpD,QAAQA,CAAA;MACN,IAAI,CAACuF,iBAAiB,GAAG,IAAI,CAACX,KAAK,CAACY,MAAM,CACvCtI,IAAI,CACH2F,uDAAiB,CAAC,IAAI,CAAC8B,KAAK,CAACS,MAAM,CAACjC,iFAAyB,CAAC,CAAC,EAC/DR,mDAAG,CAAC,CAAC,CAAC6C,MAAM,EAAEC,WAAW,CAAC,KAAI;QAC5B,IAAI,CAACX,oBAAoB,GAAGU,MAAM,CAAC,UAAU,CAAC,KAAKC,WAAW;QAC9D,IAAI,CAACd,KAAK,CAACe,QAAQ,CAACxC,kFAAkB,CAAC;UAAEyC,WAAW,EAAEH,MAAM,CAAC,UAAU;QAAC,CAAE,CAAC,CAAC;MAC9E,CAAC,CAAC,CACH,CACArI,SAAS,EAAE;IAChB;IAEAyI,WAAWA,CAAA;MACT,IAAI,IAAI,CAACL,iBAAiB,EAAE;QAC1B,IAAI,CAACA,iBAAiB,CAACM,WAAW,EAAE;;IAExC;IAAC,QAAA7H,CAAA;uBAjCU0G,gBAAgB,EAAAvD,+DAAA,CAAAE,+CAAA,GAAAF,+DAAA,CAAAmB,4DAAA,GAAAnB,+DAAA,CAAA2E,kEAAA;IAAA;IAAA,QAAA7H,EAAA;YAAhByG,gBAAgB;MAAApD,SAAA;MAAAK,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAiE,0BAAA/D,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCrB7Bb,4DAAA,uBAA8D;;UAC5DA,4DAAA,aAAoC;UAClCA,wDAAA,IAAA8E,+BAAA,iBAaM;;UAEN9E,4DAAA,aAA8B;UAC5BA,wDAAA,IAAA+E,wCAAA,2BASe,IAAAC,wCAAA;UAKfhF,uDAAA,gBAAuF;;UACzFA,0DAAA,EAAM;UACNA,4DAAA,cAAgC;UAC9BA,wDAAA,KAAAiF,mCAAA,oBAUS;UACXjF,0DAAA,EAAM;UACNA,wDAAA,KAAAkF,gCAAA,iBAEM;;UACRlF,0DAAA,EAAM;;;;UAlDOA,wDAAA,cAAa,cAAAA,yDAAA,OAAAc,GAAA,CAAAoD,UAAA;UAElBlE,uDAAA,GAA6B;UAA7BA,wDAAA,SAAAA,yDAAA,QAAAc,GAAA,CAAAqD,cAAA,EAA6B;UAgBlBnE,uDAAA,GAA0B;UAA1BA,wDAAA,SAAAc,GAAA,CAAA6C,oBAAA,CAA0B;UAU1B3D,uDAAA,GAA2B;UAA3BA,wDAAA,UAAAc,GAAA,CAAA6C,oBAAA,CAA2B;UAIlB3D,uDAAA,GAAmC;UAAnCA,wDAAA,UAAAA,yDAAA,uBAAmC;UAGlDA,uDAAA,GAA0B;UAA1BA,wDAAA,SAAAc,GAAA,CAAA6C,oBAAA,CAA0B;UAYe3D,uDAAA,GAAiE;UAAjEA,wDAAA,WAAAmF,OAAA,GAAAnF,yDAAA,SAAAc,GAAA,CAAAkD,UAAA,oBAAAmB,OAAA,CAAAC,MAAA,YAAAtE,GAAA,CAAA6C,oBAAA,CAAiE;;;;;;;SD1B5GJ,gBAAgB;AAAA;;;;;;;;;;;;;;;;;;;;AEpB0B;AACc;AACH;AAC/B;AACY;;;;AAE/C,MAAMiC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAExD,6CAAI,CAACyD,SAAS;EACpBC,SAAS,EAAEpC,2EAAgB;EAC3BqC,WAAW,EAAE,CAACL,yDAAS;CACxB,CACF;AAKM,IAAMM,oBAAoB;EAA3B,MAAOA,oBAAoB;IAAA,QAAAhJ,CAAA;uBAApBgJ,oBAAoB;IAAA;IAAA,QAAA/I,EAAA;YAApB+I;IAAoB;IAAA,QAAAC,EAAA;gBAHrBT,yDAAY,CAACU,QAAQ,CAACP,MAAM,CAAC,EAAEF,+EAAoB,CAACS,QAAQ,CAACP,MAAM,CAAC,EACpEH,yDAAY;IAAA;;SAEXQ,oBAAoB;AAAA;;sHAApBA,oBAAoB;IAAAG,OAAA,GAAA9F,yDAAA,EAAAiB,+EAAA;IAAA8E,OAAA,GAFrBZ,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACfuB;AACiB;AACE;AACyB;AAC7C;AACA;AACQ;AACuB;AACb;;AAezD,IAAMkB,aAAa;EAApB,MAAOA,aAAa;IAAA,QAAA1J,CAAA;uBAAb0J,aAAa;IAAA;IAAA,QAAAzJ,EAAA;YAAbyJ;IAAa;IAAA,QAAAT,EAAA;gBAXtB5I,yDAAY,EACZ2I,yEAAoB,EACpBK,gGAAkB,EAClBC,wDAAY,EACZC,wDAAY,EACZC,gEAAe,EACfhJ,uFAAc,EACdiJ,0EAAqB;IAAA;;SAIZC,aAAa;AAAA;;sHAAbA,aAAa;IAAAC,YAAA,GAFTjD,2EAAgB;IAAAyC,OAAA,GAT7B9I,yDAAY,EACZ2I,yEAAoB,EACpBK,gGAAkB,EAClBC,wDAAY,EACZC,wDAAY,EACZC,gEAAe,EACfhJ,uFAAc,EACdiJ,0EAAqB;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACpBoB;AAKtC,MAAMI,sBAAsB,GAAIC,KAAwB,IAA4BA,KAAK,CAACC,OAAO;AACjG,MAAMhF,sBAAsB,GAAG6E,2DAAc,CAACC,sBAAsB,EAAGC,KAA4B,IAAKA,KAAK,CAAC/I,SAAS,CAAC;AACxH,MAAMiE,mBAAmB,GAAG4E,2DAAc,CAACC,sBAAsB,EAAGC,KAA4B,IAAKA,KAAK,CAACE,SAAS,CAAC;AACrH,MAAM/E,eAAe,GAAG2E,2DAAc,CAACC,sBAAsB,EAAGC,KAA4B,IAAKA,KAAK,CAACG,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;ACRpD;AACzB;AACiB;AACI;AACxB;AACa;AAC1C,SAASM,aAAaA,CAAC,GAAGC,IAAI,EAAE;EACnC,MAAMC,cAAc,GAAGH,6DAAiB,CAACE,IAAI,CAAC;EAC9C,OAAOC,cAAc,GACfvL,gDAAI,CAACqL,aAAa,CAAC,GAAGC,IAAI,CAAC,EAAEH,wEAAgB,CAACI,cAAc,CAAC,CAAC,GAC9DN,mDAAO,CAAC,CAACO,MAAM,EAAEC,UAAU,KAAK;IAC9BT,4EAAiB,CAAC,CAACQ,MAAM,EAAE,GAAGN,oEAAc,CAACI,IAAI,CAAC,CAAC,CAAC,CAACG,UAAU,CAAC;EACpE,CAAC,CAAC;AACV;;;;;;;;;;;;;;;ACbgD;AACzC,SAAS9F,iBAAiBA,CAAC,GAAG+F,YAAY,EAAE;EAC/C,OAAOL,6DAAa,CAAC,GAAGK,YAAY,CAAC;AACzC;;;;;;;;;;;;;;ACHA,MAAM;EAAEC;AAAQ,CAAC,GAAGC,KAAK;AAClB,SAASV,cAAcA,CAACI,IAAI,EAAE;EACjC,OAAOA,IAAI,CAACjC,MAAM,KAAK,CAAC,IAAIsC,OAAO,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI;AACjE","sources":["./src/app/ApiClient.Backend/components/has-token-ok.service.ts","./src/app/ApiClient.Backend/components/image/image.component.ts","./src/app/ApiClient.Backend/components/image/image.component.html","./src/app/ApiClient.Backend/services/api.ts","./src/app/pages/profile/components/profile.component.ts","./src/app/pages/profile/components/profile.component.html","./src/app/pages/profile/profile-routing.module.ts","./src/app/pages/profile/profile.module.ts","./src/app/store/profile/profile.selectors.ts","./node_modules/rxjs/dist/esm/internal/operators/combineLatest.js","./node_modules/rxjs/dist/esm/internal/operators/combineLatestWith.js","./node_modules/rxjs/dist/esm/internal/util/argsOrArgArray.js"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, interval } from 'rxjs';\nimport {default as ApiService} from \"../services/api\";\nimport { takeUntil } from 'rxjs/operators'; // Importa el operador takeUntil\nimport { Api } from '../backend/api';\nimport { getMediaApiToken } from '../helpers/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HasTokenOkService {\n  private tokenSubject = new BehaviorSubject<boolean>(false);\n  private destroy$ = new Subject<void>(); // Observable para la terminación\n\n  constructor() {\n    this.checkTokenPeriodically();\n  }\n\n  getToken() {\n    return this.tokenSubject.asObservable();\n  }\n\n  private checkTokenPeriodically() {\n    const obj=this;\n    interval(1000) // Verificar cada segundo\n      .pipe(\n        takeUntil(obj.destroy$) // Detiene el intervalo cuando destroy$ emite un valor\n      )\n      .subscribe(() => {\n        ApiService.checkTokenApi().subscribe({\n          next: async (isOk) => {\n            let token;\n            if(isOk){\n       \n              try{\n                token=await getMediaApiToken();\n              }catch{\n                token=await Api.putMediaToken();\n              }\n              if(token){\n                obj.stopInterval();\n                obj.tokenSubject.next(isOk);\n              }\n           \n            }\n           \n            \n          }\n        });\n      });\n  }\n  stopInterval() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageFolder, MediaApi } from 'src/app/ApiClient.Backend/backend/Media/mediaApi';\nimport { ResolutionType } from 'src/app/ApiClient.Backend/backend/Media/resolution';\nimport { Observable } from 'rxjs';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { HasTokenOkService } from '../has-token-ok.service';\nimport { Uuid } from '../../backend/Common/uuid';\n\n@Component({\n  selector: 'app-image',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './image.component.html',\n  styleUrl: './image.component.scss',\n})\nexport class ImageComponent implements OnInit {\n  constructor(private hasTokenService: HasTokenOkService) {}\n\n  /**\n   * It is a good idea to always include width and height attributes.\n   * If height and width are not set,\n   * the page might flicker while the video loads.\n   */\n  @Input() width: number = 50;\n  @Input() height: number = 50;\n  @Input() defaultImageUrl?:string;\n  private _dataBase64Src?: string | null;\n  private _url?: string | null;\n  private _idPicture?: string | null;\n  private _userId?: string | null;\n\n  // Data Base64 Source\n  @Input()\n  set dataBase64Src(value: string | undefined | null) {\n    this._dataBase64Src = value;\n    this.load();\n  }\n\n  get dataBase64Src(): string | undefined | null {\n    return this._dataBase64Src;\n  }\n\n  // URL\n  @Input()\n  set url(value: string | undefined | null) {\n    this._url = value;\n    this.load();\n  }\n\n  get url(): string | undefined | null {\n    return this._url;\n  }\n\n  // ID Picture\n  @Input()\n  set idPicture(value: string | undefined | null) {\n    this._idPicture = value;\n    this.load();\n  }\n\n  get idPicture(): string | undefined | null {\n    return this._idPicture;\n  }\n\n  // User ID\n  @Input()\n  set userId(value: string | undefined | null) {\n    this._userId = value;\n    this.load();\n  }\n\n  get userId(): string | undefined | null {\n    return this._userId;\n  }\n\n  @Input() folder: keyof typeof ImageFolder | undefined | null;\n  /**\n   * If it's set isThumbnail is omitted\n   */\n  @Input() resolution: keyof typeof ResolutionType | undefined | null;\n  @Input() isThumbnail: boolean = true;\n\n  @Input() canLoad: boolean = true;\n  /**\n   * while isSetted is false the picture doesn't load into video component\n   */\n  @Input() isSetted: boolean = true;\n\n  isLoading: boolean = false;\n\n  private imgSourceSubject = new BehaviorSubject<string | undefined>(undefined);\n  public imgSource$: Observable<string | undefined> = this.imgSourceSubject.asObservable();\n\n  private hasMediaToken: boolean = false;\n\n  public get srcImg() {\n    return !this.isSetted ? undefined : this.dataBase64Src ?? this.url;\n  }\n\n  public get isLoaded() {\n    return this.dataBase64Src != undefined || this.url != undefined;\n  }\n\n  async ngOnInit() {\n    const obj = this;\n    if (!this.dataBase64Src || !this.url || !this.isThumbnail || !this.userId || !this.folder) {\n      //sense aixó necessito el token\n      obj.hasTokenService.getToken().subscribe({\n        next: async (isOk) => {\n          obj.hasMediaToken = isOk;\n          if (obj.canLoad && obj.hasMediaToken) {\n            await obj.load();\n          }\n        },\n      });\n    } else {\n      await obj.load();\n    }\n  }\n\n  /**\n   * if resolution change or isThumbnail\n   */\n  public reset() {\n    this.dataBase64Src = undefined;\n    this.url = undefined;\n  }\n\n  async load() {\n    if (!this.isLoaded) {\n      if (!this.idPicture || this.idPicture == Uuid.defaultValue){\n        this.url=this.defaultImageUrl;\n      } \n      else{\n        if (this.isThumbnail && !this.resolution) {\n          if (this.userId && this.folder) {\n            this.url = ImageComponent.getThumbnailUrl({ idPicture: this.idPicture, userId: this.userId, type: this.folder });\n          } else {\n            this.dataBase64Src = await ImageComponent.getThumbnailSrc(this.idPicture);\n          }\n        } else if (this.hasMediaToken) {\n          this.dataBase64Src = await ImageComponent.getSrc(this.idPicture, this.resolution ?? 'R8K');\n        }\n      }\n      this.imgSourceSubject.next(this.srcImg ?? undefined);\n    } else {\n      this.imgSourceSubject.next(this.srcImg ?? undefined);\n    }\n  }\n\n  static async getSrc(idPicture: string, resolution: keyof typeof ResolutionType = 'R8K') {\n    return MediaApi.getPicture({ id: idPicture, resolution }).then((p) => p.data?.Src);\n  }\n  static async getThumbnailSrc(idPicture: string) {\n    return MediaApi.getFileThumbnail(idPicture).then((p) => p.data?.Src);\n  }\n  static getThumbnailUrl({ idPicture, userId, type }: { idPicture: string; userId: string; type: keyof typeof ImageFolder }) {\n    return MediaApi.getThumbnailUrl(idPicture, userId, type);\n  }\n}","<video [src]=\"imgSource$ | async\" [width]=\"width\" [height]=\"height\" class=\"image\"></video>\n","import { Api } from \"../backend/api\";\nimport { ObservableApiFunctionWithoutArgsDirect, ToService } from \"../helpers/observables\";\n\n\n\nexport interface IApiService{\n\n    checkApiConnection:ObservableApiFunctionWithoutArgsDirect<boolean>;\n    checkTokenApi:ObservableApiFunctionWithoutArgsDirect<boolean>;\n    putMediatoken:ObservableApiFunctionWithoutArgsDirect<string>;\n\n}\n\n\nexport default ToService<IApiService>(Api);","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatestWith, Observable, startWith, Subscription } from 'rxjs';\n\nimport { ILoginInfo } from '@ApiClient/backend/Login/loginInfo';\n\nimport { selectIsLoadingProfile, selectUserLoginInfo, selectUserPosts } from '@store/profile/profile.selectors';\nimport { getLoginInfoAction } from '@store/profile/profile.actions';\nimport { AppStateInterface } from '@store/app/app-state.interface';\nimport { selectCurrentUserNickname } from '@store/auth/auth.selectors';\nimport { IPostFull } from '@ApiClient/backend/Post/post';\nimport { URLS } from '@enums/urls';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: 'profile.component.html',\n  styleUrls: ['profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  routeSubscription: Subscription | undefined;\n  isCurrentUserProfile: boolean = false;\n  locale$: Observable<string> = this.translate.onLangChange.pipe(\n    startWith({ lang: this.translate.currentLang }),\n    map((event) => event.lang),\n  );\n  userPosts$: Observable<IPostFull[] | null> = this.store.select(selectUserPosts);\n  isLoading$: Observable<boolean> = this.store.select(selectIsLoadingProfile);\n  userLoginInfo$: Observable<ILoginInfo | null> = this.store.select(selectUserLoginInfo);\n\n  constructor(\n    private store: Store<AppStateInterface>,\n    private route: ActivatedRoute,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    this.routeSubscription = this.route.params\n      .pipe(\n        combineLatestWith(this.store.select(selectCurrentUserNickname)),\n        map(([params, currentUser]) => {\n          this.isCurrentUserProfile = params['userSlug'] === currentUser;\n          this.store.dispatch(getLoginInfoAction({ nicknameUrl: params['userSlug'] }));\n        }),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    if (this.routeSubscription) {\n      this.routeSubscription.unsubscribe();\n    }\n  }\n\n  protected readonly URLS = URLS;\n}\n","<app-container [width]=\"800\" [isLoading]=\"isLoading$ | async\">\n  <div class=\"flex flex-column gap-3\">\n    <div *ngIf=\"userLoginInfo$ | async as LoginInfo\" class=\"profile-user\">\n      <div class=\"image-wrapper\">\n        <app-image\n          [folder]=\"'UserPictures'\"\n          defaultImageUrl=\"assets/videos/noUserVid.mp4\"\n          [idPicture]=\"LoginInfo.pictureId\"\n          [userId]=\"LoginInfo.userProfile.userId\"\n        ></app-image>\n      </div>\n      <div>\n        <p class=\"text-3xl font-bold mb-2\">{{ LoginInfo.userProfile.name }}</p>\n        <p>{{ '@' + LoginInfo.userNickname.nicknameDisplayed }}</p>\n      </div>\n    </div>\n\n    <div class=\"profile-controls\">\n      <ng-container *ngIf=\"isCurrentUserProfile\">\n        <button\n          pButton\n          pRipple\n          [label]=\"'BTN.EDIT_PROFILE' | translate\"\n          [routerLink]=\"['/', locale$ | async, URLS.SETTINGS]\"\n          icon=\"pi pi-user-edit\"\n        ></button>\n        <button pButton pRipple [label]=\"'BTN.INSIGHTS' | translate\" icon=\"pi pi-eye\"></button>\n      </ng-container>\n      <ng-container *ngIf=\"!isCurrentUserProfile\">\n        <button pButton pRipple [label]=\"'BTN.FOLLOW' | translate\" icon=\"pi pi-user-plus\"></button>\n        <button pButton pRipple [label]=\"'BTN.SUBSCRIBE' | translate\" icon=\"pi pi-star\"></button>\n      </ng-container>\n      <button pButton pRipple [label]=\"'BTN.MESSAGE' | translate\" icon=\"pi pi-send\"></button>\n    </div>\n    <div class=\"profile-highlights\">\n      <button *ngIf=\"isCurrentUserProfile\" class=\"add-highlight\">\n        <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 231.99 232.02\">\n          <path\n            stroke=\"currentColor\"\n            stroke-width=\"10px\"\n            stroke-miterlimit=\"10\"\n            fill=\"none\"\n            d=\"M95.17 136.82h-69a20.81 20.81 0 0 1-9.04-39.72 21.83 21.83 0 0 1 9.11-1.9h68.93v-69a20.25 20.25 0 0 1 8.24-16.94 20.72 20.72 0 0 1 32.77 11.78 23.12 23.12 0 0 1 .57 5.32q.06 33.93 0 67.87v1h69a20.34 20.34 0 0 1 17.57 9.05c8.64 12.37 1.24 29.8-13.66 32.23a25.15 25.15 0 0 1-4.06.31h-68.81v68.94c0 7.76-3.24 13.89-9.79 18.08a20.77 20.77 0 0 1-31.5-14.12 25.94 25.94 0 0 1-.32-4.13v-67.75Z\"\n          />\n        </svg>\n      </button>\n    </div>\n    <div class=\"pb-5 pt-5 text-center w-full text-2xl\" *ngIf=\"(userPosts$ | async)?.length === 0 && !isCurrentUserProfile\">\n      {{ 'PROFILE_PAGE.NO_POSTS' | translate }}\n    </div>\n  </div>\n</app-container>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalizeRouterModule } from '@gilsdav/ngx-translate-router';\nimport { ProfileComponent } from './components/profile.component';\nimport { URLS } from '@enums/urls';\nimport { AuthGuard } from '@guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: URLS.USER_SLUG,\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes), LocalizeRouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileComponent } from './components/profile.component';\nimport { ContainerComponent } from '../../shared/components/container/container.component';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ImageComponent } from '@ApiClient/components/image/image.component';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    ContainerComponent,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    ImageComponent,\n    ProgressSpinnerModule,\n  ],\n  declarations: [ProfileComponent],\n})\nexport class ProfileModule {}\n","import { createSelector } from '@ngrx/store';\n\nimport { ProfileStateInterface } from './profileState.interface';\nimport { AppStateInterface } from '@store/app/app-state.interface';\n\nexport const profileFeatureSelector = (state: AppStateInterface): ProfileStateInterface => state.profile;\nexport const selectIsLoadingProfile = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.isLoading);\nexport const selectUserLoginInfo = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.loginInfo);\nexport const selectUserPosts = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.posts);\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest(...args) {\n    const resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector))\n        : operate((source, subscriber) => {\n            combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n        });\n}\n","import { combineLatest } from './combineLatest';\nexport function combineLatestWith(...otherSources) {\n    return combineLatest(...otherSources);\n}\n","const { isArray } = Array;\nexport function argsOrArgArray(args) {\n    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n"],"names":["BehaviorSubject","Subject","interval","default","ApiService","takeUntil","Api","getMediaApiToken","HasTokenOkService","constructor","tokenSubject","destroy$","checkTokenPeriodically","getToken","asObservable","obj","pipe","subscribe","checkTokenApi","next","_ref","_asyncToGenerator","isOk","token","putMediaToken","stopInterval","_x","apply","arguments","complete","_","_2","factory","ɵfac","providedIn","CommonModule","MediaApi","Uuid","ImageComponent","hasTokenService","width","height","isThumbnail","canLoad","isSetted","isLoading","imgSourceSubject","undefined","imgSource$","hasMediaToken","dataBase64Src","value","_dataBase64Src","load","url","_url","idPicture","_idPicture","userId","_userId","srcImg","isLoaded","ngOnInit","_this","folder","reset","_this2","defaultValue","defaultImageUrl","resolution","getThumbnailUrl","type","getThumbnailSrc","getSrc","getPicture","id","then","p","data","Src","getFileThumbnail","i0","ɵɵdirectiveInject","i1","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ImageComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ɵɵsanitizeUrl","i2","AsyncPipe","styles","ToService","Store","map","ActivatedRoute","combineLatestWith","startWith","selectIsLoadingProfile","selectUserLoginInfo","selectUserPosts","getLoginInfoAction","selectCurrentUserNickname","URLS","TranslateService","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","LoginInfo_r5","pictureId","userProfile","ɵɵtextInterpolate","name","userNickname","nicknameDisplayed","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵpureFunction2","_c0","ctx_r1","locale$","SETTINGS","ɵɵnamespaceSVG","ɵɵtextInterpolate1","ProfileComponent","store","route","translate","isCurrentUserProfile","onLangChange","lang","currentLang","event","userPosts$","select","isLoading$","userLoginInfo$","routeSubscription","params","currentUser","dispatch","nicknameUrl","ngOnDestroy","unsubscribe","i3","ProfileComponent_Template","ɵɵtemplate","ProfileComponent_div_3_Template","ProfileComponent_ng_container_6_Template","ProfileComponent_ng_container_7_Template","ProfileComponent_button_11_Template","ProfileComponent_div_12_Template","tmp_7_0","length","RouterModule","LocalizeRouterModule","AuthGuard","routes","path","USER_SLUG","component","canActivate","ProfileRoutingModule","_3","forChild","imports","exports","ContainerComponent","ButtonModule","RippleModule","TranslateModule","ProgressSpinnerModule","ProfileModule","declarations","createSelector","profileFeatureSelector","state","profile","loginInfo","posts","combineLatestInit","operate","argsOrArgArray","mapOneOrManyArgs","popResultSelector","combineLatest","args","resultSelector","source","subscriber","otherSources","isArray","Array"],"sourceRoot":"webpack:///","x_google_ignoreList":[9,10,11]}