{"version":3,"sources":["webpack:///src/app/in2art/components/_tools/image-croper/image-croper.component.ts","webpack:///src/app/in2art/components/_tools/image-croper/image-croper.component.html","webpack:///src/app/in2art/components/_tools/image-croper/image.croper.module.ts"],"names":["ImageCroperComponent","imageChangedEvent","croppedImage","canvasRotation","rotation","scale","showCropper","containWithinAspectRatio","transform","event","base64","console","log","base64ToFile","sourceImageDimensions","flipAfterRotate","flippedH","flipH","flippedV","flipV","rotate","input","nativeElement","value","fileChangeEvent","imageCropped","imageLoaded","cropperReady","loadImageFailed","rotateLeft","rotateRight","flipHorizontal","flipVertical","toggleContainWithinAspectRatio","removePhoto","updateRotation","zoomOut","zoomIn","ImageCroperModule","CommonModule","SharedModule","ImageCropperModule"],"mappings":"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","file":"default-src_app_in2art_components__tools_image-croper_image_croper_module_ts-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ImageTransform, ImageCroppedEvent, base64ToFile, Dimensions } from 'ngx-image-cropper';\r\n\r\n@Component({\r\n    selector: 'app-image-croper',\r\n    templateUrl: './image-croper.component.html',\r\n    styleUrls: ['./image-croper.component.scss']\r\n})\r\nexport class ImageCroperComponent {\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n    canvasRotation = 0;\r\n    rotation = 0;\r\n    scale = 1;\r\n    showCropper = false;\r\n    containWithinAspectRatio = false;\r\n    transform: ImageTransform = {};\r\n\r\n    @ViewChild(\"input\") input;\r\n\r\n    fileChangeEvent(event: any): void {\r\n        this.imageChangedEvent = event;\r\n    }\r\n\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n        console.log(event, base64ToFile(event.base64));\r\n    }\r\n\r\n    imageLoaded() {\r\n        this.showCropper = true;\r\n        console.log('Image loaded');\r\n    }\r\n\r\n    cropperReady(sourceImageDimensions: Dimensions) {\r\n        console.log('Cropper ready', sourceImageDimensions);\r\n    }\r\n\r\n    loadImageFailed() {\r\n        console.log('Load failed');\r\n    }\r\n\r\n    rotateLeft() {\r\n        this.canvasRotation--;\r\n        this.flipAfterRotate();\r\n    }\r\n\r\n    rotateRight() {\r\n        this.canvasRotation++;\r\n        this.flipAfterRotate();\r\n    }\r\n\r\n    private flipAfterRotate() {\r\n        const flippedH = this.transform.flipH;\r\n        const flippedV = this.transform.flipV;\r\n        this.transform = {\r\n            ...this.transform,\r\n            flipH: flippedV,\r\n            flipV: flippedH\r\n        };\r\n    }\r\n\r\n\r\n    flipHorizontal() {\r\n        this.transform = {\r\n            ...this.transform,\r\n            flipH: !this.transform.flipH\r\n        };\r\n    }\r\n\r\n    flipVertical() {\r\n        this.transform = {\r\n            ...this.transform,\r\n            flipV: !this.transform.flipV\r\n        };\r\n    }\r\n\r\n    // resetImage() {\r\n    //     this.scale = 1;\r\n    //     this.rotation = 0;\r\n    //     this.canvasRotation = 0;\r\n    //     this.transform = {};\r\n    // }\r\n\r\n    zoomOut() {\r\n        this.scale -= .1;\r\n        this.transform = {\r\n            ...this.transform,\r\n            scale: this.scale\r\n        };\r\n    }\r\n\r\n    zoomIn() {\r\n        this.scale += .1;\r\n        this.transform = {\r\n            ...this.transform,\r\n            scale: this.scale\r\n        };\r\n    }\r\n\r\n    toggleContainWithinAspectRatio() {\r\n        this.containWithinAspectRatio = !this.containWithinAspectRatio;\r\n    }\r\n\r\n    updateRotation() {\r\n        this.transform = {\r\n            ...this.transform,\r\n            rotate: this.rotation\r\n        };\r\n    }\r\n\r\n    removePhoto() {\r\n        this.input.nativeElement.value = \"\";\r\n        this.fileChangeEvent(null);\r\n        this.croppedImage = null;\r\n    }\r\n\r\n    mostrarBotons() {\r\n        if (!this.input) return false;\r\n        return this.input.nativeElement.value;\r\n    }\r\n}\r\n","<image-cropper [imageChangedEvent]=\"imageChangedEvent\" [maintainAspectRatio]=\"true\"\r\n    [containWithinAspectRatio]=\"containWithinAspectRatio\" [aspectRatio]=\"1 / 1\" [resizeToWidth]=\"256\"\r\n    [cropperMinWidth]=\"128\" [onlyScaleDown]=\"true\" [roundCropper]=\"false\"\r\n    [canvasRotation]=\"canvasRotation\" [transform]=\"transform\" [alignImage]=\"'left'\"\r\n    [style.display]=\"showCropper ? null : 'none'\" format=\"png\" (imageCropped)=\"imageCropped($event)\"\r\n    (imageLoaded)=\"imageLoaded()\" (cropperReady)=\"cropperReady($event)\"\r\n    (loadImageFailed)=\"loadImageFailed()\"\r\n    [style.display]=\"mostrarBotons() ? 'block' : 'none'\">\r\n</image-cropper>\r\n<div class=\"boto-showcase\">\r\n    <div class=\"image-cropper-btn\">\r\n        <input class=\"btn inputImage\" placeholder=\"Choose Your Image\" type=\"file\"\r\n            (change)=\"fileChangeEvent($event)\" #input i18n-placeholder=\"@@Choose Your Image\" />\r\n    </div>\r\n    <div [style.display]=\"mostrarBotons() ? 'block' : 'none'\" class=\"text-center my-2\">\r\n        <img class=\"croppedImage shadow-4\" [src]=\"croppedImage\">\r\n    </div>\r\n    <div [style.display]=\"mostrarBotons() ? 'block' : 'none'\">\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"rotateLeft()\" i18n=\"@@Rotate left\">Rotate left</button>\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"rotateRight()\" i18n=\"@@Rotate right\">Rotate right</button>\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"flipHorizontal()\" i18n=\"@@Flip horizontal\">Flip horizontal</button>\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"flipVertical()\" i18n=\"@@Flip vertical\">Flip vertical</button>\r\n    </div>\r\n    <div [style.display]=\"mostrarBotons() ? 'block' : 'none'\">\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"toggleContainWithinAspectRatio()\" i18n=\"@@Contain Fill Aspect Ratio\">\r\n            {{containWithinAspectRatio?'Fill Aspect Ratio':'Contain Within Aspect Ratio'}}\r\n        </button>\r\n        <!-- <button class=\"boto botoSecundari botoPetit\" (click)=\"resetImage()\">Reset image</button> -->\r\n        <button class=\"boto botoVermell botoPetit\" (click)=\"removePhoto()\" i18n=\"@@Remove photo\">Remove photo</button>\r\n    </div>\r\n    <div [style.display]=\"mostrarBotons() ? 'block' : 'none'\">\r\n        <label class=\"col-form-label\" for=\"rotation\" i18n=\"@@Rotation\">Rotation</label>\r\n        <input class=\"btn ml-2\" [(ngModel)]=\"rotation\" placeholder=\"Rotation\"\r\n            (keyup)=\"updateRotation()\" type=\"text\" onlyNumbers i18n-placeholder=\"@@Rotation\" />\r\n    </div>\r\n    <div [style.display]=\"mostrarBotons() ? 'block' : 'none'\">\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"zoomOut()\" i18n=\"@@ZoomMinus\">Zoom -</button>\r\n        <button class=\"boto botoSecundari botoPetit\" (click)=\"zoomIn()\" i18n=\"@@ZoomPlus\">Zoom +</button>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { SharedModule } from './../../../../shared/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\nimport { ImageCroperComponent } from './image-croper.component';\r\n\r\n@NgModule({\r\n    declarations: [ImageCroperComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        ImageCropperModule\r\n    ],\r\n    exports: [ImageCroperComponent]\r\n})\r\nexport class ImageCroperModule { }\r\n"]}