{"version":3,"file":"60.js","mappings":"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","sources":["./src/app/pages/profile/components/profile.component.ts","./src/app/pages/profile/components/profile.component.html","./src/app/pages/profile/profile-routing.module.ts","./src/app/pages/profile/profile.module.ts","./src/app/store/profile/profile.selectors.ts","./node_modules/rxjs/dist/esm/internal/operators/combineLatest.js","./node_modules/rxjs/dist/esm/internal/operators/combineLatestWith.js","./node_modules/rxjs/dist/esm/internal/util/argsOrArgArray.js"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatestWith, Observable, startWith } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ILoginInfo } from '@ApiClient/backend/Login/loginInfo';\nimport { IPostFull } from '@ApiClient/backend/Post/post';\n\nimport { selectIsLoadingProfile, selectIsLoadingProfileFeed, selectUserLoginInfo, selectUserPosts } from '@store/profile/profile.selectors';\nimport { getLoginInfoAction } from '@store/profile/profile.actions';\nimport { AppStateInterface } from '@store/app/app-state.interface';\nimport { selectCanUpload, selectCurrentUserNickname } from '@store/auth/auth.selectors';\nimport { URLS } from '@enums/urls';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: 'profile.component.html',\n  styleUrls: ['profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  isCurrentUserProfile$!: Observable<boolean>;\n  locale$: Observable<string> = this.translate.onLangChange.pipe(\n    startWith({ lang: this.translate.currentLang }),\n    map((event) => event.lang),\n  );\n  userPosts$: Observable<IPostFull[] | null> = this.store.select(selectUserPosts);\n  isLoading$: Observable<boolean> = this.store.select(selectIsLoadingProfile);\n  isLoadingFeed$: Observable<boolean> = this.store.select(selectIsLoadingProfileFeed);\n  canUpload$: Observable<boolean> = this.store.select(selectCanUpload);\n  userLoginInfo$: Observable<ILoginInfo | null> = this.store.select(selectUserLoginInfo);\n\n  constructor(\n    private store: Store<AppStateInterface>,\n    private route: ActivatedRoute,\n    private translate: TranslateService,\n  ) {}\n\n  async ngOnInit() {\n    this.isCurrentUserProfile$ = this.route.params.pipe(\n      combineLatestWith(this.store.select(selectCurrentUserNickname)),\n      map(([params, currentUser]) => {\n        this.store.dispatch(getLoginInfoAction({ nicknameUrl: params['userSlug'] }));\n        return params['userSlug'] === currentUser;\n      }),\n    );\n  }\n\n  protected readonly URLS = URLS;\n}\n","<div class=\"profile-wrapper\">\n  <div class=\"user-info\">\n    <div *ngIf=\"userLoginInfo$ | async as LoginInfo\" class=\"profile-user\">\n      <div class=\"relative\">\n        <div class=\"image-wrapper\">\n          <app-image\n            [folder]=\"'UserPictures'\"\n            defaultImageUrl=\"assets/videos/noUserVid.mp4\"\n            [idPicture]=\"LoginInfo.pictureId\"\n            [userId]=\"LoginInfo.userProfile.userId\"\n          ></app-image>\n        </div>\n        <p-button\n          *ngIf=\"isCurrentUserProfile$ | async\"\n          [routerLink]=\"['/', locale$ | async, URLS.SET_PHOTO]\"\n          class=\"set-image-button\"\n          icon=\"pi pi-camera\"\n          [rounded]=\"true\"\n        ></p-button>\n      </div>\n      <div>\n        <p class=\"text-3xl font-bold mb-2\">{{ LoginInfo.userProfile.name }}</p>\n        <p>{{ '@' + LoginInfo.userNickname.nicknameDisplayed }}</p>\n      </div>\n    </div>\n\n    <div class=\"profile-controls\">\n      <ng-container *ngIf=\"isCurrentUserProfile$ | async\">\n        <button\n          pButton\n          pRipple\n          [label]=\"'BTN.EDIT_PROFILE' | translate\"\n          [routerLink]=\"['/', locale$ | async, URLS.EDIT_PROFILE]\"\n          icon=\"pi pi-user-edit\"\n        ></button>\n      </ng-container>\n    </div>\n    <div class=\"pb-5 pt-5 text-center w-full text-2xl\" *ngIf=\"(userPosts$ | async)?.length === 0\">\n      {{ 'PROFILE_PAGE.NO_POSTS' | translate }}\n    </div>\n  </div>\n  <div class=\"profile-feed\">\n    @for (post of userPosts$ | async; track post) {\n      <app-post-card [post]=\"post\"></app-post-card>\n    }\n    <div class=\"w-full\" *ngIf=\"isLoadingFeed$ | async\">\n      <app-skeleton-card></app-skeleton-card>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalizeRouterModule } from '@gilsdav/ngx-translate-router';\nimport { ProfileComponent } from './components/profile.component';\nimport { URLS } from '@enums/urls';\nimport { AuthGuard } from '@guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: URLS.USER_SLUG,\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes), LocalizeRouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\nimport { ImageComponent } from '@ApiClient/components/image/image.component';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileComponent } from './components/profile.component';\nimport { PostCardComponent } from '@components/post-card/post-card.component';\nimport { ContainerComponent } from '@components/container/container.component';\nimport { SkeletonCardComponent } from '@components/skeleton-card/skeleton-card.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    ContainerComponent,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    ImageComponent,\n    ProgressSpinnerModule,\n    SkeletonModule,\n    PostCardComponent,\n    SkeletonCardComponent,\n  ],\n  declarations: [ProfileComponent],\n})\nexport class ProfileModule {}\n","import { createSelector } from '@ngrx/store';\n\nimport { ProfileStateInterface } from './profileState.interface';\nimport { AppStateInterface } from '@store/app/app-state.interface';\n\nexport const profileFeatureSelector = (state: AppStateInterface): ProfileStateInterface => state.profile;\nexport const selectIsLoadingProfile = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.isLoading);\nexport const selectIsLoadingProfileFeed = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.isLoadingFeed);\nexport const selectUserLoginInfo = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.loginInfo);\nexport const selectUserPosts = createSelector(profileFeatureSelector, (state: ProfileStateInterface) => state.posts);\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest(...args) {\n    const resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector))\n        : operate((source, subscriber) => {\n            combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n        });\n}\n","import { combineLatest } from './combineLatest';\nexport function combineLatestWith(...otherSources) {\n    return combineLatest(...otherSources);\n}\n","const { isArray } = Array;\nexport function argsOrArgArray(args) {\n    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n"],"names":["ActivatedRoute","combineLatestWith","startWith","map","Store","TranslateService","selectIsLoadingProfile","selectIsLoadingProfileFeed","selectUserLoginInfo","selectUserPosts","getLoginInfoAction","selectCanUpload","selectCurrentUserNickname","URLS","i0","ɵɵelement","ɵɵproperty","ɵɵpureFunction2","_c0","ɵɵpipeBind1","ctx_r6","locale$","SET_PHOTO","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","ProfileComponent_div_2_p_button_4_Template","ɵɵtext","ɵɵadvance","LoginInfo_r5","pictureId","userProfile","userId","ctx_r0","isCurrentUserProfile$","ɵɵtextInterpolate","name","userNickname","nicknameDisplayed","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r1","EDIT_PROFILE","ɵɵtextInterpolate1","post_r7","ProfileComponent","constructor","store","route","translate","onLangChange","pipe","lang","currentLang","event","userPosts$","select","isLoading$","isLoadingFeed$","canUpload$","userLoginInfo$","ngOnInit","_this","_asyncToGenerator","params","currentUser","dispatch","nicknameUrl","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_div_2_Template","ProfileComponent_ng_container_5_Template","ProfileComponent_div_7_Template","ɵɵrepeaterCreate","ProfileComponent_For_11_Template","ɵɵrepeaterTrackByIdentity","ProfileComponent_div_13_Template","tmp_2_0","length","ɵɵrepeater","RouterModule","LocalizeRouterModule","AuthGuard","routes","path","USER_SLUG","component","canActivate","ProfileRoutingModule","_3","forChild","imports","exports","CommonModule","TranslateModule","ButtonModule","RippleModule","SkeletonModule","ProgressSpinnerModule","ImageComponent","PostCardComponent","ContainerComponent","SkeletonCardComponent","ProfileModule","declarations","createSelector","profileFeatureSelector","state","profile","isLoading","isLoadingFeed","loginInfo","posts","combineLatestInit","operate","argsOrArgArray","mapOneOrManyArgs","popResultSelector","combineLatest","args","resultSelector","source","subscriber","otherSources","isArray","Array"],"sourceRoot":"webpack:///","x_google_ignoreList":[5,6,7]}